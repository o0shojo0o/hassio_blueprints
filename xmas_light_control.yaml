blueprint:
  name: Christmas Lights with Schedule, On/Off Control, and Party Mode
  description: Controls Christmas lights based on a schedule, with optional sensors and a Party Mode.
  domain: automation
  input:
    lights:
      name: Christmas Lights
      description: The lights to be controlled.
      selector:
        target:
          entity:
          - domain:
              - light
    schedule:
      name: Schedule
      description: Schedule entity determining on/off times.
      selector:
        entity:
          filter:
          - domain:
              - schedule
          multiple: false
    party_mode:
      name: Party Mode (optional)
      description: If this toggle is enabled, the lights will stay on regardless of the schedule, brightness, presence, or motion sensor checks.
      default: []
      selector:
        entity:
          filter:
          - domain:
              - input_boolean
          multiple: false
    persons:
      name: Persons (optional)
      description: List of persons, at least one of whom must be present (if empty, no check).
      default: []
      selector:
        entity:
          multiple: true
          filter:
          - domain:
              - person
    brightness_sensor:
      name: Brightness Sensor (optional)
      description: An optional sensor measuring brightness (in Lux).
      default: []
      selector:
        entity:
          filter:
          - device_class:
              - illuminance
            domain:
              - sensor
          multiple: false
    brightness_threshold:
      name: Brightness Threshold
      description: Maximum brightness (Lux) at which lights will be turned on.
      default: 50
      selector:
        number:
          min: 0.0
          max: 1000.0
          unit_of_measurement: lux
          step: 1.0
          mode: slider
    brightness_delay:
      name: Brightness Delay
      description: Time in seconds the brightness value must be below the threshold before it is considered valid.
      default: 0
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
          step: 1
          mode: slider
    motion_sensor:
      name: Motion Sensor (optional)
      description: An optional motion sensor that detects movement.
      default: []
      selector:
        entity:
          filter:
          - device_class:
              - motion
            domain:
              - binary_sensor
          multiple: false
  source_url: https://github.com/o0shojo0o/hassio_blueprints/blob/main/xmas_light_control.yaml
mode: restart
triggers:
  - platform: state
    entity_id: !input schedule
  - platform: template
    value_template: >
      {% if brightness_sensor %}
        {{ states(brightness_sensor) | float(0) <= brightness_threshold }}
      {% else %}
        false
      {% endif %}
    for:
      seconds: !input brightness_delay
  - platform: state
    entity_id: !input persons
  - platform: state
    entity_id: !input motion_sensor
  - platform: state
    entity_id: !input party_mode
variables:
  schedule: !input schedule
  brightness_sensor: !input brightness_sensor
  brightness_threshold: !input brightness_threshold
  brightness_delay: !input brightness_delay
  persons: !input persons
  motion_sensor: !input motion_sensor
  party_mode: !input party_mode
condition: []
action:
  - choose:
      - conditions:
          - condition: template
            value_template: >
              {% if party_mode %}
                {{ states(party_mode) == 'on' }}
              {% else %}
                false
              {% endif %}
        sequence:
          - service: light.turn_on
            target: !input lights
      - conditions:
          - condition: template
            value_template: '{{ states(schedule) == ''on'' }}'
          - condition: template
            value_template: >
              {% if persons | length > 0 %}
                {{ expand(persons) | selectattr('state', 'equalto', 'home') | list | length > 0 }}
              {% else %}
                true
              {% endif %}
          - condition: template
            value_template: >
              {% if motion_sensor %}
                {{ states(motion_sensor) == 'on' }}
              {% else %}
                true
              {% endif %}
        sequence:
          - service: light.turn_on
            target: !input lights
    default:
      - service: light.turn_off
        target: !input lights
