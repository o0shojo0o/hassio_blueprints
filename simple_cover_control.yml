blueprint:
  name: Simple Cover Control
  description: A simple control mechanism for managing the position of a cover using one or more switches.
  domain: automation
  input:
    taster_action:
      name: Control Switch Action
      description: The switch-action which triggers this automation.
      selector:
        entity:
          filter:
            - domain:
                - sensor
          multiple: true
    cover:
      name: The cover
      description: The specific cover to be controlled by this automation.
      selector:
        entity:
          filter:
            - domain:
                - cover
          multiple: false
    windowsContact:
      name: Window Contact
      description: The window contact sensor that triggers the ventilation cover position when the window is open.
      selector:
        entity:
          filter:
            - domain:
                - binary_sensor
          multiple: false
    ventilatePos:
      name: Ventilation Cover Position
      description: Specifies the position to which the cover should move during ventilation. Adjust the percentage to control the position.
      default: 5
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "%"
          mode: slider
  source_url: https://github.com/o0shojo0o/hassio_blueprints/blob/main/
alias: Cover Control
description: ""
trigger:
  - platform: state
    entity_id: !input taster_action
    to: open
    id: open_event
  - platform: state
    entity_id: !input taster_action
    to: close
    id: close_event
  - platform: state
    entity_id: !input windowsContact
    to: "off"
    id: event_windows_close
    for:
      hours: 0
      minutes: 0
      seconds: 3
  - platform: state
    entity_id: !input windowsContact
    to: "on"
    id: event_windows_open
    for:
      hours: 0
      minutes: 0
      seconds: 3

condition: []

action:
  - variables:
      ventilatePos: !input ventilatePos
      cover: !input cover

  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'open_event' }}"
        sequence:
          - service: cover.open_cover
            target:
              entity_id: !input cover
            data: {}
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'close_event' }}"
        sequence:
          - service: cover.close_cover
            target:
              entity_id: !input cover
            data: {}
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'event_windows_open' and state_attr(cover, 'current_position') | int == 0 }}"
        sequence:
          - service: cover.set_cover_position
            target:
              entity_id: !input cover
            data:
              position: "{{ ventilatePos }}"
      - conditions:
          - condition: template
            value_template: "{{ trigger.id == 'event_windows_close' and state_attr(cover, 'current_position') | int == ventilatePos }}"
        sequence:
          - service: cover.close_cover
            target:
              entity_id: !input cover
            data: {}
mode: single
